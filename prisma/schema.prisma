// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  userId            String     @id @default(auto()) @map("_id") @db.ObjectId

  provider          String
  providerId        String?    @unique

  email             String     @unique
  hash              String?

  username          String?
  picture           String?
  bulb              Int        @default(0)

  roles             Roles[]    @default([])

  ownedGames        Game[]     @relation("Owner", fields: [ownedGameIds], references: [gameId])
  ownedGameIds      String[]   @db.ObjectId

  createdGames      Game[]     @relation("Creator", fields: [createdGameIds], references: [gameId])
  createdGameIds    String[]   @db.ObjectId

  cartedGames       Game[]     @relation("Carting", fields: [cartedGameIds], references: [gameId])
  cartedGameIds     String[]   @db.ObjectId

  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  @@map("users")
}

model Game {
  gameId String @id @default(auto()) @map("_id") @db.ObjectId

  gameName        String
  description     String
  picture         String[]    @default([])
  price           Int
  sale            Int         @default(0)
  genres          genre[]     @default([])

  ownedUsers      User[]      @relation("Owner", fields: [ownedUserIds], references: [userId])
  ownedUserIds    String[]    @db.ObjectId

  createdUsers    User[]      @relation("Creator", fields: [createdUserIds], references: [userId])
  createdUserIds  String[]    @db.ObjectId

  cartedUsers     User[]      @relation("Carting", fields: [cartedUserIds], references: [userId])
  cartedUserIds   String[]    @db.ObjectId

  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@map("games")
}

enum Roles {
  Admin
  Seller
  Buyer
  IT
}

enum genre {
  Action
  RPG
}
